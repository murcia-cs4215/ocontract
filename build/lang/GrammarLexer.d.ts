import { ATN } from 'antlr4ts/atn/ATN';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { Vocabulary } from 'antlr4ts/Vocabulary';
export declare class GrammarLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly POW = 5;
    static readonly MUL = 6;
    static readonly DIV = 7;
    static readonly ADD = 8;
    static readonly SUB = 9;
    static readonly MOD = 10;
    static readonly ADDFLOAT = 11;
    static readonly SUBFLOAT = 12;
    static readonly MULFLOAT = 13;
    static readonly DIVFLOAT = 14;
    static readonly LESSTHAN = 15;
    static readonly LESSTHANOREQUAL = 16;
    static readonly GREATERTHAN = 17;
    static readonly GREATERTHANOREQUAL = 18;
    static readonly EQUALSTRUC = 19;
    static readonly NOTEQUALSTRUC = 20;
    static readonly EQUALPHYS = 21;
    static readonly NOTEQUALPHYS = 22;
    static readonly CONCAT = 23;
    static readonly AND = 24;
    static readonly OR = 25;
    static readonly NOT = 26;
    static readonly NUMBER = 27;
    static readonly TOSKIP = 28;
    static readonly CHAR = 29;
    static readonly STRING = 30;
    static readonly FLOAT = 31;
    static readonly BOOLEAN = 32;
    static readonly IF = 33;
    static readonly THEN = 34;
    static readonly ELSE = 35;
    static readonly FUN = 36;
    static readonly ARROW = 37;
    static readonly PIPE = 38;
    static readonly LET = 39;
    static readonly IN = 40;
    static readonly REC = 41;
    static readonly COLON = 42;
    static readonly CONTRACT = 43;
    static readonly DOUBLESEMICOLON = 44;
    static readonly PRIMITIVETYPE = 45;
    static readonly IDENTIFIER = 46;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
//# sourceMappingURL=GrammarLexer.d.ts.map